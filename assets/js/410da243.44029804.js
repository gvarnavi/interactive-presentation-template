"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5987],{54981:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>N,contentTitle:()=>T,default:()=>P,frontMatter:()=>S,metadata:()=>E,toc:()=>C});var r=n(85893),a=n(11151),l=n(67294),o=n(90512),s=n(12466),i=n(65262),u=n(20469),c=n(91980),d=n(67392),p=n(50012);function h(e){return l.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,l.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function m(e){const{values:t,children:n}=e;return(0,l.useMemo)((()=>{const e=t??function(e){return h(e).map((e=>{let{props:{value:t,label:n,attributes:r,default:a}}=e;return{value:t,label:n,attributes:r,default:a}}))}(n);return function(e){const t=(0,d.duplicates)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function b(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function f(e){let{queryString:t=!1,groupId:n}=e;const r=(0,i.useHistory)(),a=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,c.useQueryStringValue)(a),(0,l.useCallback)((e=>{if(!a)return;const t=new URLSearchParams(r.location.search);t.set(a,e),r.replace({...r.location,search:t.toString()})}),[a,r])]}function g(e){const{defaultValue:t,queryString:n=!1,groupId:r}=e,a=m(e),[o,s]=(0,l.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!b({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const r=n.find((e=>e.default))??n[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:t,tabValues:a}))),[i,c]=f({queryString:n,groupId:r}),[d,h]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[r,a]=(0,p.useStorageSlot)(n);return[r,(0,l.useCallback)((e=>{n&&a.set(e)}),[n,a])]}({groupId:r}),g=(()=>{const e=i??d;return b({value:e,tabValues:a})?e:null})();(0,u.default)((()=>{g&&s(g)}),[g]);return{selectedValue:o,selectValue:(0,l.useCallback)((e=>{if(!b({value:e,tabValues:a}))throw new Error(`Can't select invalid tab value=${e}`);s(e),c(e),h(e)}),[c,h,a]),tabValues:a}}var y=n(72389);const x={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function w(e){let{className:t,block:n,selectedValue:a,selectValue:l,tabValues:i}=e;const u=[],{blockElementScrollPositionUntilNextRender:c}=(0,s.useScrollPositionBlocker)(),d=e=>{const t=e.currentTarget,n=u.indexOf(t),r=i[n].value;r!==a&&(c(t),l(r))},p=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const n=u.indexOf(e.currentTarget)+1;t=u[n]??u[0];break}case"ArrowLeft":{const n=u.indexOf(e.currentTarget)-1;t=u[n]??u[u.length-1];break}}t?.focus()};return(0,r.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.default)("tabs",{"tabs--block":n},t),children:i.map((e=>{let{value:t,label:n,attributes:l}=e;return(0,r.jsx)("li",{role:"tab",tabIndex:a===t?0:-1,"aria-selected":a===t,ref:e=>u.push(e),onKeyDown:p,onClick:d,...l,className:(0,o.default)("tabs__item",x.tabItem,l?.className,{"tabs__item--active":a===t}),children:n??t},t)}))})}function v(e){let{lazy:t,children:n,selectedValue:a}=e;const o=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=o.find((e=>e.props.value===a));return e?(0,l.cloneElement)(e,{className:"margin-top--md"}):null}return(0,r.jsx)("div",{className:"margin-top--md",children:o.map(((e,t)=>(0,l.cloneElement)(e,{key:t,hidden:e.props.value!==a})))})}function j(e){const t=g(e);return(0,r.jsxs)("div",{className:(0,o.default)("tabs-container",x.tabList),children:[(0,r.jsx)(w,{...e,...t}),(0,r.jsx)(v,{...e,...t})]})}function k(e){const t=(0,y.default)();return(0,r.jsx)(j,{...e,children:h(e.children)},String(t))}const _={tabItem:"tabItem_Ymn6"};function I(e){let{children:t,hidden:n,className:a}=e;return(0,r.jsx)("div",{role:"tabpanel",className:(0,o.default)(_.tabItem,a),hidden:n,children:t})}var V=n(91994);const S={id:"outline",sidebar_position:1,title:"Pyodide Kernels",hide_table_of_contents:!0,hide_title:!0},T="Pyodide web worker kernels",E={id:"outline",title:"Pyodide Kernels",description:"Markdown preformatted code blocks with the python language identifier are automatically converted",source:"@site/slides/outline.mdx",sourceDirName:".",slug:"/outline",permalink:"/interactive-presentation-template/slides/outline",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"outline",sidebar_position:1,title:"Pyodide Kernels",hide_table_of_contents:!0,hide_title:!0},sidebar:"tutorialSidebar",next:{title:"Jupyterlab Cells",permalink:"/interactive-presentation-template/slides/jupyterlab"}},N={},C=[];function M(e){const t={a:"a",code:"code",h1:"h1",p:"p",pre:"pre",...(0,a.useMDXComponents)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"pyodide-web-worker-kernels",children:"Pyodide web worker kernels"}),"\n",(0,r.jsxs)(k,{Lazy:!0,children:[(0,r.jsxs)(I,{value:"python",label:"Python code",default:!0,children:[(0,r.jsxs)(t.p,{children:["Markdown preformatted code blocks with the ",(0,r.jsx)(t.code,{children:"python"})," language identifier are automatically converted\nto runnable and editable code blocks thanks to ",(0,r.jsx)(t.a,{href:"https://github.com/elilambnz/react-py",children:"react-py"}),"."]}),(0,r.jsx)(t.p,{children:"For example, in a Markdown docs file:"}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:'```python\nimport numpy as np\n\nprint("Hello, World!")\nprint(np.arange(10))\n```\n'})}),(0,r.jsx)(t.p,{children:"Becomes:"}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",children:'import numpy as np\n\nprint("Hello, World!")\nprint(np.arange(10))\n'})}),(0,r.jsx)(t.p,{children:"We have included numpy in our default install configuration, but if you want any additional\npackages you can specify them using a comma-separated list, per code-block:"}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:'```python packages="scipy python-cowsay"\nfrom scipy import special\nfrom cowsay import cowsay\n\nnum = 27\nres = special.cbrt(num)\nmessage = f"The cube root of {num} is {res}"\nprint(cowsay(message))\n```\n'})}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",metastring:'packages="scipy python-cowsay"',children:'from scipy import special\nfrom cowsay import cowsay\n\nnum = 27\nres = special.cbrt(num)\nmessage = f"The cube root of {num} is {res}"\nprint(cowsay(message))\n'})})]}),(0,r.jsxs)(I,{value:"matplotlib",label:"Matplotlib output",children:[(0,r.jsxs)(t.p,{children:["You'll notice the examples before used ",(0,r.jsx)(t.code,{children:"print()"})," statements to pipe outputs to stdout.\nThis works reasonably well, but is restricted to textual outputs.\nBelow, we patch matplotlib's ",(0,r.jsx)(t.code,{children:"show()"})," function to encode figures as a base64 png str to stdout,\nwhich we catch and render as an image using the ",(0,r.jsx)(t.code,{children:"MatplotlibCodeEditor"})," component."]}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"<MatplotlibCodeEditor\nmetastring='packages=\"matplotlib\"' \ncode={`import os...`}\n/>\n"})}),(0,r.jsx)(V.default,{metastring:'packages="matplotlib"',code:"import os\nimport base64\nfrom io import BytesIO\n\n# Set this _before_ importing matplotlib\nos.environ['MPLBACKEND'] = 'AGG'\n\nimport matplotlib.pyplot as plt\n\n# Patch\ndef ensure_matplotlib_patch():\n  _old_show = plt.show\n\n  def show():\n    buf = BytesIO()\n    plt.savefig(buf, format='png')\n    buf.seek(0)\n\t\n    # Encode to a base64 str\n    img = \"<MatplotlibOutput>\"\n    img += 'data:image/png;base64,'\n    img += base64.b64encode(buf.read()).decode('utf-8')\n    img += \"</MatplotlibOutput>\"\n    # Write to stdout\n    print(img)\n    plt.clf()\n\n  plt.show = show\n\nensure_matplotlib_patch()\n\n# Plot\nfig, ax = plt.subplots()\nax.plot([1,3,2])\nplt.show()"})]}),(0,r.jsxs)(I,{value:"jsx",label:"Javascript markup",children:[(0,r.jsxs)(t.p,{children:["Markdown preformatted code blocks with the ",(0,r.jsx)(t.code,{children:"jsx live"})," language identifier are\nautomatically converted to runnable and editable code blocks thanks\nto ",(0,r.jsx)(t.a,{href:"https://docusaurus.io/docs/markdown-features/code-blocks#interactive-code-editor",children:"@docusaurus/theme-live-codeblock"}),"."]}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:'```jsx live\nfunction ReptileListItems() {\n  const reptiles = ["alligator", "snake", "lizard"];\n  return reptiles.map((reptile) => <li key={reptile}>{reptile}</li>);\n}\n```\n'})}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-jsx",metastring:"live",live:!0,children:'function ReptileListItems() {\n  const reptiles = ["alligator", "snake", "lizard"];\n  return reptiles.map((reptile) => <li key={reptile}>{reptile}</li>);\n}\n'})})]})]})]})}function P(e={}){const{wrapper:t}={...(0,a.useMDXComponents)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(M,{...e})}):M(e)}}}]);